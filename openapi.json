{
    "openapi": "3.1.0",
    "info": {
        "title": "AI Creation API",
        "description": "API for voice cloning, LoRA training/generation, and prompt enhancement.",
        "version": "v1"
    },
    "paths": {
        "/api/users/register": {
            "post": {
                "tags": [
                    "API"
                ],
                "summary": "Register User",
                "description": "Registers a new user and generates an API key.",
                "operationId": "register_user_api_users_register_post",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Email"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/voices/uploads/url": {
            "post": {
                "tags": [
                    "API"
                ],
                "summary": "Create Voice Upload Url",
                "description": "Generates a Supabase Storage upload URL for voice training data.",
                "operationId": "create_voice_upload_url_api_voices_uploads_url_post",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the voice clone",
                            "title": "Name"
                        },
                        "description": "Name of the voice clone"
                    },
                    {
                        "name": "file_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the file to upload",
                            "title": "File Name"
                        },
                        "description": "Name of the file to upload"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Create Voice Upload Url Api Voices Uploads Url Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/voices/uploads": {
            "post": {
                "tags": [
                    "API"
                ],
                "summary": "Create Voice",
                "description": "Create a new voice",
                "operationId": "create_voice_api_voices_uploads_post",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "upload_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Upload ID",
                            "title": "Upload Id"
                        },
                        "description": "Upload ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VoiceClone"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "API"
                ],
                "summary": "List Voice Uploads",
                "description": "Get all voice uploads.",
                "operationId": "list_voice_uploads_api_voices_uploads_get",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VoiceUpload"
                                    },
                                    "title": "Response List Voice Uploads Api Voices Uploads Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/voices": {
            "get": {
                "tags": [
                    "API"
                ],
                "summary": "List Voices",
                "description": "Get all voices",
                "operationId": "list_voices_api_voices_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/VoiceClone"
                                    },
                                    "type": "array",
                                    "title": "Response List Voices Api Voices Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ]
            }
        },
        "/api/voices/{voice_id}": {
            "get": {
                "tags": [
                    "API"
                ],
                "summary": "Get Voice",
                "description": "Get a specific voice",
                "operationId": "get_voice_api_voices__voice_id__get",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "voice_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Voice Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VoiceClone"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/voices/{voice_id}/generations": {
            "post": {
                "tags": [
                    "API"
                ],
                "summary": "Create Voice Generation",
                "description": "Generate speech using a specific voice",
                "operationId": "create_voice_generation_api_voices__voice_id__generations_post",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "voice_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Voice Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VoiceGenerationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VoiceGenerationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "API"
                ],
                "summary": "List Voice Generations By Voice",
                "description": "Get all generations for a specific voice",
                "operationId": "list_voice_generations_by_voice_api_voices__voice_id__generations_get",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "voice_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Voice Id"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Number of generations to return",
                            "default": 20,
                            "title": "Limit"
                        },
                        "description": "Number of generations to return"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Offset for pagination",
                            "default": 0,
                            "title": "Offset"
                        },
                        "description": "Offset for pagination"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VoiceGenerationList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/voices/generations": {
            "get": {
                "tags": [
                    "API"
                ],
                "summary": "List All Voice Generations",
                "description": "Get all voice generations",
                "operationId": "list_all_voice_generations_api_voices_generations_get",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Number of generations to return",
                            "default": 20,
                            "title": "Limit"
                        },
                        "description": "Number of generations to return"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Offset for pagination",
                            "default": 0,
                            "title": "Offset"
                        },
                        "description": "Offset for pagination"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VoiceGenerationList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/voices/generations/{generation_id}": {
            "get": {
                "tags": [
                    "API"
                ],
                "summary": "Get Voice Generation",
                "description": "Get a specific voice generation by ID.",
                "operationId": "get_voice_generation_api_voices_generations__generation_id__get",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "generation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Generation Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VoiceGeneration"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/loras/uploads/url": {
            "post": {
                "tags": [
                    "API"
                ],
                "summary": "Create Upload Url",
                "description": "Generates a Supabase Storage upload URL.",
                "operationId": "create_upload_url_api_loras_uploads_url_post",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the LoRA",
                            "title": "Name"
                        },
                        "description": "Name of the LoRA"
                    },
                    {
                        "name": "trigger_word",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Trigger word for the LoRA",
                            "title": "Trigger Word"
                        },
                        "description": "Trigger word for the LoRA"
                    },
                    {
                        "name": "file_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Name of the file to upload",
                            "title": "File Name"
                        },
                        "description": "Name of the file to upload"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Create Upload Url Api Loras Uploads Url Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/loras/uploads": {
            "get": {
                "tags": [
                    "API"
                ],
                "summary": "List Lora Uploads",
                "description": "Get all LoRA uploads.",
                "operationId": "list_lora_uploads_api_loras_uploads_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LoraUpload"
                                    },
                                    "type": "array",
                                    "title": "Response List Lora Uploads Api Loras Uploads Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ]
            }
        },
        "/api/loras/trainings/{upload_id}": {
            "post": {
                "tags": [
                    "API"
                ],
                "summary": "Train Lora",
                "description": "Start LoRA training for a specific upload. Returns immediately when training job is created.",
                "operationId": "train_lora_api_loras_trainings__upload_id__post",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "upload_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the uploaded LoRA data",
                            "title": "Upload Id"
                        },
                        "description": "ID of the uploaded LoRA data"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "API"
                ],
                "summary": "Get Lora Status",
                "description": "Get the status of a LoRA training job.",
                "operationId": "get_lora_status_api_loras_trainings__upload_id__get",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "upload_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Upload Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoraTraining"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/loras/trainings": {
            "get": {
                "tags": [
                    "API"
                ],
                "summary": "List Lora Trainings",
                "description": "Get all LoRA trainings.",
                "operationId": "list_lora_trainings_api_loras_trainings_get",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Number of trainings to return",
                            "default": 20,
                            "title": "Limit"
                        },
                        "description": "Number of trainings to return"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Offset for pagination",
                            "default": 0,
                            "title": "Offset"
                        },
                        "description": "Offset for pagination"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/loras/{lora_id}/generations": {
            "post": {
                "tags": [
                    "API"
                ],
                "summary": "Generate Lora",
                "description": "Generate an image using a trained LoRA model.",
                "operationId": "generate_lora_api_loras__lora_id__generations_post",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "lora_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Lora Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateLoraRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "API"
                ],
                "summary": "Get Lora Generations",
                "description": "Get all generations for a specific LoRA model.",
                "operationId": "get_lora_generations_api_loras__lora_id__generations_get",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "lora_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "The ID of the LoRA model",
                            "title": "Lora Id"
                        },
                        "description": "The ID of the LoRA model"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Number of generations to return",
                            "default": 20,
                            "title": "Limit"
                        },
                        "description": "Number of generations to return"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Offset for pagination",
                            "default": 0,
                            "title": "Offset"
                        },
                        "description": "Offset for pagination"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    },
                                    "title": "Response Get Lora Generations Api Loras  Lora Id  Generations Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/loras/generations": {
            "get": {
                "tags": [
                    "API"
                ],
                "summary": "List All Generations",
                "description": "Get all LoRA generations for the given API key.",
                "operationId": "list_all_generations_api_loras_generations_get",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Number of generations to return",
                            "default": 20,
                            "title": "Limit"
                        },
                        "description": "Number of generations to return"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Offset for pagination",
                            "default": 0,
                            "title": "Offset"
                        },
                        "description": "Offset for pagination"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    },
                                    "title": "Response List All Generations Api Loras Generations Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/loras/generations/{generation_id}": {
            "get": {
                "tags": [
                    "API"
                ],
                "summary": "Get Generation",
                "description": "Get a specific generation by ID.",
                "operationId": "get_generation_api_loras_generations__generation_id__get",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "generation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "The ID of the generation",
                            "title": "Generation Id"
                        },
                        "description": "The ID of the generation"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Get Generation Api Loras Generations  Generation Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/demo/tadz": {
            "post": {
                "tags": [
                    "API"
                ],
                "summary": "Demo Tadz",
                "description": "Generate an image of Tadz using the specialized model and prompt enhancer.",
                "operationId": "demo_tadz_api_demo_tadz_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TadzGenerationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ]
            }
        },
        "/api/demo/pudgy": {
            "post": {
                "tags": [
                    "API"
                ],
                "summary": "Demo Pudgy",
                "description": "Generate an image of Pudgy Penguins using the specialized model and prompt enhancer.",
                "operationId": "demo_pudgy_api_demo_pudgy_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PudgyGenerationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Body_record_phrase_voice_phrases__user_id___phrase_id__record_post": {
                "properties": {
                    "audio_file": {
                        "type": "string",
                        "format": "binary",
                        "title": "Audio File"
                    }
                },
                "type": "object",
                "required": [
                    "audio_file"
                ],
                "title": "Body_record_phrase_voice_phrases__user_id___phrase_id__record_post"
            },
            "Body_upload_avatar_avatar_upload__user_id__post": {
                "properties": {
                    "image_file": {
                        "type": "string",
                        "format": "binary",
                        "title": "Image File"
                    }
                },
                "type": "object",
                "required": [
                    "image_file"
                ],
                "title": "Body_upload_avatar_avatar_upload__user_id__post"
            },
            "Body_upload_training_data_lora_upload__user_id__post": {
                "properties": {
                    "zip_file": {
                        "type": "string",
                        "format": "binary",
                        "title": "Zip File"
                    }
                },
                "type": "object",
                "required": [
                    "zip_file"
                ],
                "title": "Body_upload_training_data_lora_upload__user_id__post"
            },
            "CreditPackageResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "credits": {
                        "type": "integer",
                        "title": "Credits"
                    },
                    "price_sol": {
                        "type": "number",
                        "title": "Price Sol"
                    },
                    "bonus_percentage": {
                        "type": "integer",
                        "title": "Bonus Percentage"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "credits",
                    "price_sol",
                    "bonus_percentage"
                ],
                "title": "CreditPackageResponse"
            },
            "GenerateLoraRequest": {
                "properties": {
                    "prompt": {
                        "type": "string",
                        "title": "Prompt"
                    }
                },
                "type": "object",
                "required": [
                    "prompt"
                ],
                "title": "GenerateLoraRequest"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "LoraTraining": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "upload_id": {
                        "type": "string",
                        "title": "Upload Id"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "upload_id",
                    "status",
                    "created_at",
                    "updated_at"
                ],
                "title": "LoraTraining"
            },
            "LoraUpload": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At"
                    },
                    "trigger_word": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Trigger Word"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "trigger_word"
                ],
                "title": "LoraUpload"
            },
            "PudgyGenerationRequest": {
                "properties": {
                    "prompt": {
                        "type": "string",
                        "title": "Prompt"
                    }
                },
                "type": "object",
                "required": [
                    "prompt"
                ],
                "title": "PudgyGenerationRequest"
            },
            "ReplicateHardware": {
                "type": "string",
                "enum": [
                    "cpu",
                    "gpu-t4",
                    "gpu-l40s",
                    "gpu-a100-large"
                ],
                "title": "ReplicateHardware"
            },
            "ReplicateModelCreate": {
                "properties": {
                    "user_id": {
                        "type": "string",
                        "title": "User Id"
                    }
                },
                "type": "object",
                "required": [
                    "user_id"
                ],
                "title": "ReplicateModelCreate"
            },
            "ReplicateModelResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "User Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "replicate_owner": {
                        "type": "string",
                        "title": "Replicate Owner"
                    },
                    "replicate_name": {
                        "type": "string",
                        "title": "Replicate Name"
                    },
                    "replicate_url": {
                        "type": "string",
                        "title": "Replicate Url"
                    },
                    "visibility": {
                        "$ref": "#/components/schemas/ReplicateModelVisibility"
                    },
                    "hardware": {
                        "$ref": "#/components/schemas/ReplicateHardware"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "user_id",
                    "name",
                    "replicate_owner",
                    "replicate_name",
                    "replicate_url",
                    "visibility",
                    "hardware",
                    "created_at",
                    "updated_at"
                ],
                "title": "ReplicateModelResponse"
            },
            "ReplicateModelVisibility": {
                "type": "string",
                "enum": [
                    "public",
                    "private"
                ],
                "title": "ReplicateModelVisibility"
            },
            "TadzGenerationRequest": {
                "properties": {
                    "prompt": {
                        "type": "string",
                        "title": "Prompt"
                    }
                },
                "type": "object",
                "required": [
                    "prompt"
                ],
                "title": "TadzGenerationRequest"
            },
            "UserDetailResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "username": {
                        "type": "string",
                        "title": "Username"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "referral_code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Referral Code"
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code"
                    },
                    "onboarding_completed": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Onboarding Completed",
                        "default": false
                    },
                    "avatar_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avatar Url"
                    },
                    "wallets": {
                        "items": {
                            "$ref": "#/components/schemas/WalletInfo"
                        },
                        "type": "array",
                        "title": "Wallets",
                        "default": []
                    },
                    "points": {
                        "type": "number",
                        "title": "Points",
                        "default": 0.0
                    },
                    "points_multiplier": {
                        "type": "number",
                        "title": "Points Multiplier",
                        "default": 1.0
                    },
                    "points_per_second": {
                        "type": "number",
                        "title": "Points Per Second",
                        "default": 1.0
                    },
                    "friends_referred": {
                        "type": "integer",
                        "title": "Friends Referred",
                        "default": 0
                    },
                    "voice_clone": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/VoiceCloneInfo"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "twitter_handle": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Twitter Handle"
                    },
                    "twitter_connected": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Twitter Connected",
                        "default": false
                    },
                    "twitter_details": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Twitter Details"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "username",
                    "created_at"
                ],
                "title": "UserDetailResponse"
            },
            "UserLabFeatures": {
                "properties": {
                    "voice_clone": {
                        "type": "boolean",
                        "title": "Voice Clone"
                    },
                    "avatar": {
                        "type": "boolean",
                        "title": "Avatar"
                    },
                    "lora": {
                        "type": "boolean",
                        "title": "Lora"
                    },
                    "personality": {
                        "type": "boolean",
                        "title": "Personality"
                    },
                    "memory": {
                        "type": "boolean",
                        "title": "Memory"
                    },
                    "interaction": {
                        "type": "boolean",
                        "title": "Interaction"
                    }
                },
                "type": "object",
                "required": [
                    "voice_clone",
                    "avatar",
                    "lora",
                    "personality",
                    "memory",
                    "interaction"
                ],
                "title": "UserLabFeatures"
            },
            "UserResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "username": {
                        "type": "string",
                        "title": "Username"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "referral_code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Referral Code"
                    },
                    "onboarding_completed": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Onboarding Completed"
                    },
                    "avatar_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avatar Url"
                    },
                    "is_new": {
                        "type": "boolean",
                        "title": "Is New",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "username",
                    "created_at",
                    "referral_code",
                    "onboarding_completed"
                ],
                "title": "UserResponse"
            },
            "UserUpdate": {
                "properties": {
                    "username": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Username"
                    },
                    "referral_code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Referral Code"
                    },
                    "onboarding_completed": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Onboarding Completed"
                    },
                    "avatar_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avatar Url"
                    }
                },
                "type": "object",
                "title": "UserUpdate"
            },
            "UserUpdateResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "username": {
                        "type": "string",
                        "title": "Username"
                    },
                    "referral_code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Referral Code"
                    },
                    "onboarding_completed": {
                        "type": "boolean",
                        "title": "Onboarding Completed"
                    },
                    "avatar_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avatar Url"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "username",
                    "referral_code",
                    "onboarding_completed",
                    "created_at"
                ],
                "title": "UserUpdateResponse"
            },
            "UserVoicePhrase": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id"
                    },
                    "phrase_id": {
                        "type": "integer",
                        "title": "Phrase Id"
                    },
                    "recording_url": {
                        "type": "string",
                        "title": "Recording Url"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "user_id",
                    "phrase_id",
                    "recording_url",
                    "status",
                    "created_at",
                    "updated_at"
                ],
                "title": "UserVoicePhrase"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "VerifyPurchaseRequest": {
                "properties": {
                    "transaction_hash": {
                        "type": "string",
                        "title": "Transaction Hash"
                    },
                    "package_id": {
                        "type": "string",
                        "title": "Package Id"
                    },
                    "wallet_address": {
                        "type": "string",
                        "title": "Wallet Address"
                    }
                },
                "type": "object",
                "required": [
                    "transaction_hash",
                    "package_id",
                    "wallet_address"
                ],
                "title": "VerifyPurchaseRequest"
            },
            "VoiceClone": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "created_at"
                ],
                "title": "VoiceClone"
            },
            "VoiceCloneInfo": {
                "properties": {
                    "has_clone": {
                        "type": "boolean",
                        "title": "Has Clone"
                    },
                    "voice_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Voice Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "has_clone"
                ],
                "title": "VoiceCloneInfo"
            },
            "VoiceCloneRequest": {
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "user_id",
                    "name"
                ],
                "title": "VoiceCloneRequest"
            },
            "VoiceCloneResponse": {
                "properties": {
                    "voice_id": {
                        "type": "string",
                        "title": "Voice Id"
                    },
                    "requires_verification": {
                        "type": "boolean",
                        "title": "Requires Verification"
                    }
                },
                "type": "object",
                "required": [
                    "voice_id",
                    "requires_verification"
                ],
                "title": "VoiceCloneResponse"
            },
            "VoiceGeneration": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "voice_id": {
                        "type": "string",
                        "title": "Voice Id"
                    },
                    "text": {
                        "type": "string",
                        "title": "Text"
                    },
                    "audio_url": {
                        "type": "string",
                        "title": "Audio Url"
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "voice_id",
                    "text",
                    "audio_url",
                    "created_at"
                ],
                "title": "VoiceGeneration"
            },
            "VoiceGenerationList": {
                "properties": {
                    "generations": {
                        "items": {
                            "$ref": "#/components/schemas/VoiceGeneration"
                        },
                        "type": "array",
                        "title": "Generations"
                    },
                    "total": {
                        "type": "integer",
                        "title": "Total"
                    },
                    "limit": {
                        "type": "integer",
                        "title": "Limit"
                    },
                    "offset": {
                        "type": "integer",
                        "title": "Offset"
                    }
                },
                "type": "object",
                "required": [
                    "generations",
                    "total",
                    "limit",
                    "offset"
                ],
                "title": "VoiceGenerationList"
            },
            "VoiceGenerationRequest": {
                "properties": {
                    "text": {
                        "type": "string",
                        "title": "Text"
                    }
                },
                "type": "object",
                "required": [
                    "text"
                ],
                "title": "VoiceGenerationRequest"
            },
            "VoiceGenerationResponse": {
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "Url"
                    }
                },
                "type": "object",
                "required": [
                    "url"
                ],
                "title": "VoiceGenerationResponse"
            },
            "VoicePhrase": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "text": {
                        "type": "string",
                        "title": "Text"
                    },
                    "phrase_order": {
                        "type": "integer",
                        "title": "Phrase Order"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "text",
                    "phrase_order",
                    "is_active",
                    "created_at"
                ],
                "title": "VoicePhrase"
            },
            "VoiceUpload": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "status"
                ],
                "title": "VoiceUpload"
            },
            "WalletAdd": {
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address"
                    },
                    "signature": {
                        "type": "string",
                        "title": "Signature"
                    },
                    "signed_message": {
                        "type": "string",
                        "title": "Signed Message"
                    },
                    "chain": {
                        "type": "string",
                        "title": "Chain"
                    }
                },
                "type": "object",
                "required": [
                    "user_id",
                    "address",
                    "signature",
                    "signed_message",
                    "chain"
                ],
                "title": "WalletAdd"
            },
            "WalletInfo": {
                "properties": {
                    "address": {
                        "type": "string",
                        "title": "Address"
                    },
                    "chain": {
                        "type": "string",
                        "title": "Chain"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "chain"
                ],
                "title": "WalletInfo"
            },
            "WalletResponse": {
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address"
                    },
                    "chain": {
                        "type": "string",
                        "title": "Chain"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "data": {
                        "type": "object",
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "user_id",
                    "address",
                    "chain",
                    "status",
                    "data"
                ],
                "title": "WalletResponse"
            }
        },
        "securitySchemes": {
            "APIKeyHeader": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-Key"
            }
        }
    }
}